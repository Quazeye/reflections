How did viewing a diff between two versions of a file help you see the bug that was introduced?

It helped me to see only the changes in the file and not have to go through the whole file.
It was also easy to see the changes as I could see the old and new file side by side.



How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

I can look at the changes I have made from beginning to end and learn where I can
make my code more efficient.



What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?

I think that the pros are that I can save it at a logical time, I can choose to save when I have fixed jsut one bug
and I can choose to commit after finishing a function that took an hour to code.  Cons would be that I may forget to save commits regularly or may commit after each little change.



Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

I think that in Google Docs most people are working on a single file at a time.  In coding you are likely to be 
using more than one file so its important to keep track of changes to all the files that the program needs to work.



How can you use the commands git log and git diff to view the history of files?

I can use git log to see the history of the whole repository and the comments about the commits.  I can use git diff
to compare 2 files to see what was changed from the first file to the second.



How might using version control make you more confident to make changes that could break something?

I could always go back to a previous version if I break something.



Now that you have your workspace set up, what do you want to try using Git for?

I want to use git for my coding and also for websites.